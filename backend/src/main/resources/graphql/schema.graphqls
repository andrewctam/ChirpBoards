type Query {
    #No authentication required. Include relatedUsername to get information for certain queries.
    user(username: String!, relatedUsername: String = null): User
    #No authentication required. Include relatedUsername to get information for certain queries.
    post(id: String!, relatedUsername: String = null): Post
    
    #No authentication required. Retrieves any posts. Include relatedUsername to get information for certain queries.
    allPosts(pageNum: Int = 0, size: Int = 10, sortMethod: String = "postDate", sortDirection: String = "descending", relatedUsername: String = null): PaginatedPosts

    #No authentication required. Retrieves trending posts, sorted by score in the last 24 hours. Include relatedUsername to get information for certain queries.
    trendingPosts(pageNum: Int = 0, size: Int = 10, relatedUsername: String = null): PaginatedPosts
    
    #No authentication required. Retrieves the most recent posts from a user's following list. username is also relatedUsername.
    followingPosts(pageNum: Int = 0, size: Int = 10, sortMethod: String = "postDate", sortDirection: String = "descending", username: String!): PaginatedPosts

    #No authentication required. Retrieves posts from a user. Include relatedUsername to get information for certain queries.
    searchUsers(query: String!, pageNum: Int = 0, size: Int = 10, relatedUsername: String = null): PaginatedUsers

    #No authentication required. Retrieves posts from a user. Include relatedUsername to get information for certain queries.
    searchPosts(query: String!, pageNum: Int = 0, size: Int = 10, sortMethod: String = "postDate", sortDirection: String = "descending", relatedUsername: String = null): PaginatedPosts

    #Authentication required. Retrieves notifications for a user.
    notifications(pageNum: Int = 0, size: Int = 10, username: String!, sessionToken: String!, relatedUsername: String = null): PaginatedNotifications
}

type Mutation {
    #No authentication required. Registers a user and returns a session token, or an error.
    register(username: String!, displayName: String!, password: String!): SigninRegisterResponse

    #No authentication required. Signs in and returns a session token, or an error.
    signin(username: String!, password: String!): SigninRegisterResponse

    #Requires authentication. Clears the session token from the database. Returns true if successful, or null if unauthorized.
    signout(username: String!, sessionToken: String!): BooleanResponse

    #Requires authentication. Checks if session is still valid and requests notifications. Returns null if false, or the number of unread notifications if true.
    verifySession(username: String!, sessionToken: String!): Int


    #Requires authentication. Creates and returns a post.
    createPost(text: String!, username: String!, sessionToken: String!): PostResponse

    #Requires authentication. Creates and returns a post (comment).
    comment(text: String!, parentPostId: String!, username: String!, sessionToken: String!): PostResponse

    #Requires authentication. Rechirps a chirp or comment.
    rechirp(postId: String!, username: String!, sessionToken: String!): BooleanResponse

    #Requires authentication. Undoes a rechirp if only the original chirp id is known. Can use deletePost is the rechirp's id is known.
    undoRechirp(postId: String!, username: String!, sessionToken: String!): BooleanResponse

    
    #Requires authentication. Adds or removes a user from the upvotes list of a post. Returns the ending upvote status as a boolean, or null if unauthorized.
    upvotePost(postId: String!, username: String!, sessionToken: String!): IntResponse

    #Requires authentication. Adds or removes a user from the downvotes list of a post. Returns the ending downvote status as a boolean, or null if unauthorized.
    downvotePost(postId: String!, username: String!, sessionToken: String!): IntResponse

    #Requires authentication. Deletes a post
    deletePost(postId: String!, username: String!, sessionToken: String!): BooleanResponse

    #Requires authentication. Edits a post
    editPost(newText: String!, postId: String!, username: String!, sessionToken: String!): BooleanResponse


    #Requires authentication. Pins or unpins a post
    pinPost(postId: String!, username: String!, sessionToken: String!): BooleanResponse

    #Requires authentication. Changes display name.
    changeDisplayName(newDisplayName: String!, username: String!, sessionToken: String!): BooleanResponse

    #No authentication required (but old password needed, so a sessionToken could be obtained anyway). Changes password.
    changePassword(oldPassword: String!, newPassword: String!, username: String!): BooleanResponse

    #Requires authentication. Changes user color.
    changeUserColor(newUserColor: String!, username: String!, sessionToken: String!): BooleanResponse

    #Requires authentication. Clears notifications
    clearNotifications(username: String!, sessionToken: String!): Boolean



    #Requires authentication. Follows or unfollows a user. Returns the ending follow status as a boolean, or null if unauthorized.
    toggleFollow(userToFollow: String!, username: String!, sessionToken: String!): BooleanResponse


}


type User {
    username: String!
    displayName: String!
    followerCount: Int!
    followingCount: Int!
    pinnedPost: Post
    userColor: String

    isFollowing(followeeUsername: String!): Boolean
    followers(pageNum: Int = 0, size: Int = 10): PaginatedUsers
    following(pageNum: Int = 0, size: Int = 10): PaginatedUsers
    posts(pageNum: Int = 0, size: Int = 10, sortMethod: String = "postDate", sortDirection: String = "descending"): PaginatedPosts
    postCount: Int!
}


type Post {
    id: ID!
    author: User!
    text: String!
    isComment: Boolean!
    isRechirp: Boolean!
    parentPost: Post
    rootPost: Post
    postDate(timezone: Int!): String!
    score: Int!
    isEdited: Boolean!

    #vote status (0, 1, or -1) of the relatedUsername argument passed in query.
    voteStatus: Int
    #rechirp status (true or false) of the relatedUsername argument passed in query.
    rechirpStatus: Boolean
    commentCount: Int!
    comments(pageNum: Int = 0, size: Int = 10, sortMethod: String = "postDate", sortDirection: String = "descending"): PaginatedPosts
}

type SigninRegisterResponse {
    msg: String
    sessionToken: String
}

type PostResponse {
    msg: String
    post: Post
}

type BooleanResponse {
    msg: String
    endRes: Boolean
}

type IntResponse {
    msg: String
    endRes: Int
}


type PaginatedPosts {
    posts: [Post!]!
    hasNext: Boolean!
}

type PaginatedUsers {
    users: [User!]!
    hasNext: Boolean
}

type Notification {
    type: String!
    pinger: User!
    post: Post
    date(timezone: Int!): String!
} 

type PaginatedNotifications {
    notifications: [Notification!]!
    hasNext: Boolean!
    unread: Int!
}