type Query {
    #no authentication required
    user(username: String!): User
    post(id: String!): Post
}

type Mutation {
    #no authentication required
    register(username: String!, displayName: String!, password: String!): LoginRegisterResponse
    signin(username: String!, password: String!): LoginRegisterResponse

    #requires authentication
    createPost(text: String!, isComment: Boolean!, username: String!, sessionToken: String!): Post
    upvotePost(postId: String!, username: String!, sessionToken: String!): Boolean
    downvotePost(postId: String!, username: String!, sessionToken: String!): Boolean
    signout(username: String!, sessionToken: String!): Boolean
    toggleFollow(userToFollow: String!, username: String!, sessionToken: String!): Boolean
}


type User {
    username: String!
    displayName: String!
    followers(first: Int, offset: Int): [User!]!
    following(first: Int, offset: Int): [User!]!
    posts(first: Int, offset: Int): [Post!]!
}


type Post {
    id: ID!
    author: User!
    text: String!
    isComment: Boolean!
    postDate: String!
    upvotes(first: Int, offset: Int): [User!]!
    downvotes(first: Int, offset: Int): [User!]!
    comments(first: Int, offset: Int): [Post!]! 
}

type LoginRegisterResponse {
    error: String
    sessionToken: String
}

